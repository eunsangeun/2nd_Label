{"ast":null,"code":"var _jsxFileName = \"/Users/gainlee/Desktop/gdsc_2ndlabel/2ndlabel/src/pages/ApplicationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Month from \"react-calendar/dist/cjs/YearView/Month\";\n\n// Styled component 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCalendar = styled(Calendar)`\n    &.react-calendar {\n        // react-calendar의 기본 클래스명에 대한 스타일\n        border-radius: 10px; // 테두리 둥글게\n        border-color: #0f4b43;\n        background-color: #f5f1ed; // 배경색 변경\n        width: 60vw;\n        height: 60vh;\n        position: absolute;\n        left: 20%;\n        top: 20%;\n    }\n\n    .react-calendar__navigation {\n        // 네비게이션 버튼 스타일\n\n        background-color: #f5f1ed;\n        border-radius: 10px; // 테두리 둥글게\n        button {\n            border-radius: 10px; // 테두리 둥글게\n            min-width: 44px; // 버튼 최소 너비 설정\n            background-color: #f5f1ed; // 버튼 배경색 변경\n            font-size: 1.5em;\n        }\n    }\n\n    .react-calendar__month-view__weekdays {\n        font-size: 1.2em;\n    }\n    .react-calendar__month-view__days__day--weekend {\n        // 주말 날짜 스타일\n        color: #d10000; // 주말 날짜 색상 변경\n    }\n\n    .react-calendar__tile {\n        height: calc(60vh / 6); // 높이를 뷰포트 높이의 1/6로 설정\n        font-size: 1em;\n        display: flex;\n        justify-content: center;\n        align-items: center; // 내용을 타일 중앙에 배치\n    }\n\n    .react-calendar__tile:enabled:hover,\n    .react-calendar__tile:enabled:focus {\n        // 타일 호버 및 포커스 스타일\n        background-color: #0f4b43; // 배경색 변경\n        border-radius: 10px; // 테두리 둥글게\n    }\n\n    .react-calendar__tile--active {\n        background-color: rgba(15, 75, 67, 0.5); // 선택된 타일의 배경색 변경\n        border-radius: 10px; // 테두리 둥글게\n    }\n\n    .special-day {\n        background-color: rgba(15, 75, 67, 0.5) !important;\n        border-radius: 10px; // 테두리 둥글게\n    }\n\n    .today {\n        background-color: #0f4b43;\n        color: #ffffff;\n        border-radius: 10px; // 테두리 둥글게\n    }\n`;\n_c = StyledCalendar;\nfunction CustomCalendar(props) {\n  _s();\n  // 이름을 CustomCalendar로 변경하여 충돌 방지\n  const [dated, onChange] = useState(new Date());\n  // 현재 연도와 월을 확인하기 위한 함수\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    // 'month' 뷰에서만 스타일 적용\n    if (view === \"month\") {\n      // 오늘 날짜 확인\n      const today = new Date();\n      if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear()) {\n        return \"today\"; // 오늘 날짜에 해당하는 타일에 'today' 클래스 적용\n      }\n      const day = date.getDate();\n      if (day === 5 || day === 11) {\n        return \"special-day\"; // 특별한 날짜에 'special-day' 클래스 적용\n      }\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(StyledCalendar, {\n    className: \"calendar\",\n    onChange: onChange,\n    value: dated,\n    tileClassName: tileClassName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(CustomCalendar, \"ABSzIDdjWNs2L4KsnTgqR2aToIo=\");\n_c2 = CustomCalendar;\nfunction ApplicationForm(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calendar-box\",\n    children: /*#__PURE__*/_jsxDEV(CustomCalendar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_c3 = ApplicationForm;\nexport default ApplicationForm; // 컴포넌트 정의 후 export\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledCalendar\");\n$RefreshReg$(_c2, \"CustomCalendar\");\n$RefreshReg$(_c3, \"ApplicationForm\");","map":{"version":3,"names":["React","useState","styled","Calendar","Month","jsxDEV","_jsxDEV","StyledCalendar","_c","CustomCalendar","props","_s","dated","onChange","Date","tileClassName","date","view","today","getDate","getMonth","getFullYear","day","className","value","fileName","_jsxFileName","lineNumber","columnNumber","_c2","ApplicationForm","id","children","_c3","$RefreshReg$"],"sources":["/Users/gainlee/Desktop/gdsc_2ndlabel/2ndlabel/src/pages/ApplicationForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Month from \"react-calendar/dist/cjs/YearView/Month\";\n\n// Styled component 생성\nconst StyledCalendar = styled(Calendar)`\n    &.react-calendar {\n        // react-calendar의 기본 클래스명에 대한 스타일\n        border-radius: 10px; // 테두리 둥글게\n        border-color: #0f4b43;\n        background-color: #f5f1ed; // 배경색 변경\n        width: 60vw;\n        height: 60vh;\n        position: absolute;\n        left: 20%;\n        top: 20%;\n    }\n\n    .react-calendar__navigation {\n        // 네비게이션 버튼 스타일\n\n        background-color: #f5f1ed;\n        border-radius: 10px; // 테두리 둥글게\n        button {\n            border-radius: 10px; // 테두리 둥글게\n            min-width: 44px; // 버튼 최소 너비 설정\n            background-color: #f5f1ed; // 버튼 배경색 변경\n            font-size: 1.5em;\n        }\n    }\n\n    .react-calendar__month-view__weekdays {\n        font-size: 1.2em;\n    }\n    .react-calendar__month-view__days__day--weekend {\n        // 주말 날짜 스타일\n        color: #d10000; // 주말 날짜 색상 변경\n    }\n\n    .react-calendar__tile {\n        height: calc(60vh / 6); // 높이를 뷰포트 높이의 1/6로 설정\n        font-size: 1em;\n        display: flex;\n        justify-content: center;\n        align-items: center; // 내용을 타일 중앙에 배치\n    }\n\n    .react-calendar__tile:enabled:hover,\n    .react-calendar__tile:enabled:focus {\n        // 타일 호버 및 포커스 스타일\n        background-color: #0f4b43; // 배경색 변경\n        border-radius: 10px; // 테두리 둥글게\n    }\n\n    .react-calendar__tile--active {\n        background-color: rgba(15, 75, 67, 0.5); // 선택된 타일의 배경색 변경\n        border-radius: 10px; // 테두리 둥글게\n    }\n\n    .special-day {\n        background-color: rgba(15, 75, 67, 0.5) !important;\n        border-radius: 10px; // 테두리 둥글게\n    }\n\n    .today {\n        background-color: #0f4b43;\n        color: #ffffff;\n        border-radius: 10px; // 테두리 둥글게\n    }\n`;\n\nfunction CustomCalendar(props) {\n    // 이름을 CustomCalendar로 변경하여 충돌 방지\n    const [dated, onChange] = useState(new Date());\n    // 현재 연도와 월을 확인하기 위한 함수\n    const tileClassName = ({ date, view }) => {\n        // 'month' 뷰에서만 스타일 적용\n        if (view === \"month\") {\n            // 오늘 날짜 확인\n            const today = new Date();\n            if (\n                date.getDate() === today.getDate() &&\n                date.getMonth() === today.getMonth() &&\n                date.getFullYear() === today.getFullYear()\n            ) {\n                return \"today\"; // 오늘 날짜에 해당하는 타일에 'today' 클래스 적용\n            }\n            const day = date.getDate();\n\n            if (day === 5 || day === 11) {\n                return \"special-day\"; // 특별한 날짜에 'special-day' 클래스 적용\n            }\n        }\n        return null;\n    };\n\n    return (\n        <StyledCalendar\n            className=\"calendar\"\n            onChange={onChange}\n            value={dated}\n            tileClassName={tileClassName}\n        />\n    );\n}\n\nfunction ApplicationForm(props) {\n    return (\n        <div id=\"calendar-box\">\n            <CustomCalendar />\n        </div>\n    );\n}\n\nexport default ApplicationForm; // 컴포넌트 정의 후 export\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC,OAAOC,KAAK,MAAM,wCAAwC;;AAE1D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGL,MAAM,CAACC,QAAQ,CAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,EAAA,GAhEID,cAAc;AAkEpB,SAASE,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAIa,IAAI,CAAC,CAAC,CAAC;EAC9C;EACA,MAAMC,aAAa,GAAGA,CAAC;IAAEC,IAAI;IAAEC;EAAK,CAAC,KAAK;IACtC;IACA,IAAIA,IAAI,KAAK,OAAO,EAAE;MAClB;MACA,MAAMC,KAAK,GAAG,IAAIJ,IAAI,CAAC,CAAC;MACxB,IACIE,IAAI,CAACG,OAAO,CAAC,CAAC,KAAKD,KAAK,CAACC,OAAO,CAAC,CAAC,IAClCH,IAAI,CAACI,QAAQ,CAAC,CAAC,KAAKF,KAAK,CAACE,QAAQ,CAAC,CAAC,IACpCJ,IAAI,CAACK,WAAW,CAAC,CAAC,KAAKH,KAAK,CAACG,WAAW,CAAC,CAAC,EAC5C;QACE,OAAO,OAAO,CAAC,CAAC;MACpB;MACA,MAAMC,GAAG,GAAGN,IAAI,CAACG,OAAO,CAAC,CAAC;MAE1B,IAAIG,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAK,EAAE,EAAE;QACzB,OAAO,aAAa,CAAC,CAAC;MAC1B;IACJ;IACA,OAAO,IAAI;EACf,CAAC;EAED,oBACIhB,OAAA,CAACC,cAAc;IACXgB,SAAS,EAAC,UAAU;IACpBV,QAAQ,EAAEA,QAAS;IACnBW,KAAK,EAAEZ,KAAM;IACbG,aAAa,EAAEA;EAAc;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAACjB,EAAA,CAjCQF,cAAc;AAAAoB,GAAA,GAAdpB,cAAc;AAmCvB,SAASqB,eAAeA,CAACpB,KAAK,EAAE;EAC5B,oBACIJ,OAAA;IAAKyB,EAAE,EAAC,cAAc;IAAAC,QAAA,eAClB1B,OAAA,CAACG,cAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd;AAACK,GAAA,GANQH,eAAe;AAQxB,eAAeA,eAAe,CAAC,CAAC;AAAA,IAAAtB,EAAA,EAAAqB,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}