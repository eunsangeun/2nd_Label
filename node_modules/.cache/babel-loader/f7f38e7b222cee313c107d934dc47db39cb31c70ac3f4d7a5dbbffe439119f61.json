{"ast":null,"code":"var _jsxFileName = \"/Users/gainlee/Desktop/gdsc_2ndlabel/2ndlabel/src/pages/ApplicationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// CalendarProps 인터페이스 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Calendar 컴포넌트 정의\nconst Calendar = ({\n  selectedDay,\n  setSelectedDay,\n  isPrevMonth,\n  isNextMonth\n}) => {\n  _s();\n  const daysOfWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const buildCalendarDays = () => {\n    const curMonthStartDate = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1).getDay();\n    const curMonthEndDate = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);\n    const prevMonthEndDate = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 0);\n    const nextMonthStartDate = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 1);\n    const days = Array.from({\n      length: curMonthStartDate\n    }, (_, i) => {\n      return new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1, prevMonthEndDate.getDate() - i);\n    }).reverse();\n    days.push(...Array.from({\n      length: curMonthEndDate.getDate()\n    }, (_, i) => new Date(currentMonth.getFullYear(), currentMonth.getMonth(), i + 1)));\n    const remainingDays = 7 - days.length % 7;\n    if (remainingDays < 7) {\n      days.push(...Array.from({\n        length: remainingDays\n      }, (_, i) => new Date(nextMonthStartDate.getFullYear(), nextMonthStartDate.getMonth(), i + 1)));\n    }\n    return days;\n  };\n  const buildCalendarTag = calendarDays => {\n    return calendarDays.map((day, i) => {\n      if (day.getMonth() < currentMonth.getMonth()) {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"prevMonthDay\",\n          children: isPrevMonth ? day.getDate() : \"\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this);\n      }\n      if (day.getMonth() > currentMonth.getMonth()) {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"nextMonthDay\",\n          children: isNextMonth ? day.getDate() : \"\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this);\n      }\n      if (day < today) {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"prevDay\",\n          children: day.getDate()\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: `futureDay ${isSameDay(day, selectedDay) && \"choiceDay\"}`,\n        onClick: () => onClickDay(day),\n        children: day.getDate()\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  const calendarDays = buildCalendarDays();\n  const calendarTags = buildCalendarTag(calendarDays);\n  const calendarRows = divideWeek(calendarTags);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarNav\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: calendarRows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n// ApplicationForm 컴포넌트 정의 및 export\n_s(Calendar, \"N6MwIQ3MTTQfe+bC1boIoFejPG4=\");\n_c = Calendar;\nexport default function ApplicationForm() {\n  const [selectedDay, setSelectedDay] = useState < Date | null > null;\n  const isPrevMonth = true; // 이 값은 예시이며, 실제 로직에 따라 변경될 수 있습니다.\n  const isNextMonth = true; // 이 값도 예시입니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    style: {\n      fontSize: \"32px\"\n    },\n    children: [\"\\uAE30\\uBD80\\uC2E0\\uCCAD\\uC11C \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(Calendar, {\n      selectedDay: selectedDay,\n      setSelectedDay: setSelectedDay,\n      isPrevMonth: isPrevMonth,\n      isNextMonth: isNextMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ApplicationForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"ApplicationForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","selectedDay","setSelectedDay","isPrevMonth","isNextMonth","_s","daysOfWeek","currentMonth","setCurrentMonth","Date","today","setHours","buildCalendarDays","curMonthStartDate","getFullYear","getMonth","getDay","curMonthEndDate","prevMonthEndDate","nextMonthStartDate","days","Array","from","length","_","i","getDate","reverse","push","remainingDays","buildCalendarTag","calendarDays","map","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isSameDay","onClick","onClickDay","calendarTags","calendarRows","divideWeek","row","_c","ApplicationForm","style","fontSize","_c2","$RefreshReg$"],"sources":["/Users/gainlee/Desktop/gdsc_2ndlabel/2ndlabel/src/pages/ApplicationForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n// CalendarProps 인터페이스 정의\ninterface CalendarProps {\n    selectedDay: Date | null;\n    setSelectedDay: (day: Date | null) => void;\n    isPrevMonth: boolean;\n    isNextMonth: boolean;\n}\n\n// Calendar 컴포넌트 정의\nconst Calendar = ({\n    selectedDay,\n    setSelectedDay,\n    isPrevMonth,\n    isNextMonth,\n}: CalendarProps) => {\n    const daysOfWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    const [currentMonth, setCurrentMonth] = useState(new Date());\n\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    const buildCalendarDays = () => {\n        const curMonthStartDate = new Date(\n            currentMonth.getFullYear(),\n            currentMonth.getMonth(),\n            1\n        ).getDay();\n        const curMonthEndDate = new Date(\n            currentMonth.getFullYear(),\n            currentMonth.getMonth() + 1,\n            0\n        );\n        const prevMonthEndDate = new Date(\n            currentMonth.getFullYear(),\n            currentMonth.getMonth(),\n            0\n        );\n        const nextMonthStartDate = new Date(\n            currentMonth.getFullYear(),\n            currentMonth.getMonth() + 1,\n            1\n        );\n        const days: Date[] = Array.from(\n            { length: curMonthStartDate },\n            (_, i) => {\n                return new Date(\n                    currentMonth.getFullYear(),\n                    currentMonth.getMonth() - 1,\n                    prevMonthEndDate.getDate() - i\n                );\n            }\n        ).reverse();\n\n        days.push(\n            ...Array.from(\n                { length: curMonthEndDate.getDate() },\n                (_, i) =>\n                    new Date(\n                        currentMonth.getFullYear(),\n                        currentMonth.getMonth(),\n                        i + 1\n                    )\n            )\n        );\n\n        const remainingDays = 7 - (days.length % 7);\n        if (remainingDays < 7) {\n            days.push(\n                ...Array.from(\n                    { length: remainingDays },\n                    (_, i) =>\n                        new Date(\n                            nextMonthStartDate.getFullYear(),\n                            nextMonthStartDate.getMonth(),\n                            i + 1\n                        )\n                )\n            );\n        }\n        return days;\n    };\n\n    const buildCalendarTag = (calendarDays: Date[]) => {\n        return calendarDays.map((day: Date, i: number) => {\n            if (day.getMonth() < currentMonth.getMonth()) {\n                return (\n                    <td key={i} className=\"prevMonthDay\">\n                        {isPrevMonth ? day.getDate() : \"\"}\n                    </td>\n                );\n            }\n            if (day.getMonth() > currentMonth.getMonth()) {\n                return (\n                    <td key={i} className=\"nextMonthDay\">\n                        {isNextMonth ? day.getDate() : \"\"}\n                    </td>\n                );\n            }\n            if (day < today) {\n                return (\n                    <td key={i} className=\"prevDay\">\n                        {day.getDate()}\n                    </td>\n                );\n            }\n            return (\n                <td\n                    key={i}\n                    className={`futureDay ${\n                        isSameDay(day, selectedDay) && \"choiceDay\"\n                    }`}\n                    onClick={() => onClickDay(day)}>\n                    {day.getDate()}\n                </td>\n            );\n        });\n    };\n\n    const calendarDays = buildCalendarDays();\n    const calendarTags = buildCalendarTag(calendarDays);\n    const calendarRows = divideWeek(calendarTags);\n\n    return (\n        <div className=\"calendar\">\n            <div className=\"calendarNav\"></div>\n            <table>\n                <thead></thead>\n                <tbody>\n                    {calendarRows.map((row, i) => (\n                        <tr key={i}>{row}</tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\n// ApplicationForm 컴포넌트 정의 및 export\nexport default function ApplicationForm() {\n    const [selectedDay, setSelectedDay] = (useState < Date) | (null > null);\n    const isPrevMonth = true; // 이 값은 예시이며, 실제 로직에 따라 변경될 수 있습니다.\n    const isNextMonth = true; // 이 값도 예시입니다.\n\n    return (\n        <div className=\"page-container\" style={{ fontSize: \"32px\" }}>\n            기부신청서 화면입니다.\n            <Calendar\n                selectedDay={selectedDay}\n                setSelectedDay={setSelectedDay}\n                isPrevMonth={isPrevMonth}\n                isNextMonth={isNextMonth}\n            />\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}